plugins {
    id 'java'
    id 'application'
}

group 'ru.clevertec'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    jmh {
        java.srcDirs = ['src/jmh/java']
        resources.srcDirs = ['src/jmh/resources']
        compileClasspath += sourceSets.main.runtimeClasspath
    }
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testRuntimeOnly 'junit:junit:4.13.2'
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.35'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.35'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
}

application {
    mainClassName = 'ru.clevertec.check.Main'
}

test {
    useJUnit()
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'ru.clevertec.check.Main'
    }
}

sourceCompatibility = JavaVersion.VERSION_11

class FileDownloader extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void  download() {
        try {
            ant.get(src: sourceUrl, dest: target)
        } catch (Exception e) {
            println e
        }
    }
}

task downloadFileFromRepo(type: FileDownloader) {
    sourceUrl = 'https://github.com/KohovichDzmitry/ClevertecCheck/blob/85664a955db49f3cc1dd2cff169c5bcab135137a/src/main/resources/check'
    target = new File('src/main/resources/check.txt')
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


task jmh(type: JavaExec, dependsOn: jmhClasses) {
    main = 'org.openjdk.jmh.Main'
    classpath = sourceSets.jmh.compileClasspath + sourceSets.jmh.runtimeClasspath
}

classes.finalizedBy(jmhClasses)